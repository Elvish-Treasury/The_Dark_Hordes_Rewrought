#textdomain wesnoth-TDHR

#define TRANSFER_CHARACTER ID
    [event]
        name=prestart
        id={ID}_transfer_setup_menu
        [set_menu_item]
            id={ID}_transfer_control_menu
            description=_ "Transfer control"
            [show_if]
                [have_unit]
                    x,y=$x1,$y1
                    side=$side_number
                    id={ID}
                [/have_unit]
            [/show_if]
            [command]
                [store_side]
                    [allied_with]
                        side=$side_number
                    [/allied_with]
                    [not]
                        side=$side_number
                    [/not]
                    controller=human
                    variable=transfer_candidate_sides
                [/store_side]
                [foreach]
                    array=transfer_candidate_sides
                    [do]
                        [set_variables]
                            name=transfer_side_options
                            mode=append
                            [value]
                               image="$this_item.flag_icon|~TC($this_item.side, magenta)"
                               description=_"Side " + $this_item.side
                               [command]
                                  {VARIABLE tmp_transfer_side $this_item.side}
                               [/command]
                            [/value]
                         [/set_variables]
                    [/do]
                [/foreach]
                {CLEAR_VARIABLE transfer_candidate_sides}
                [message]
                    speaker={ID}
                     message=_"Select which side should take control of this character:"
                    side_for=$side_number
                    [option]
                        image="misc/red-x.png"
                        description=_"Don't transfer control"
                        [command]           
                        [/command]
                    [/option]                    
                    [insert_tag]
                         name=option
                         variable=transfer_side_options
                    [/insert_tag]
                [/message]
                {CLEAR_VARIABLE transfer_side_options}
                [if]
                    {VARIABLE_CONDITIONAL tmp_transfer_side greater_than 0}
                    [then]
                        [store_unit]
                            [filter]
                                id={ID}
                            [/filter]
                            variable=tmp_transferred_unit
                        [/store_unit]
                        {VARIABLE {ID}_transferred_this_turn yes}
                        {VARIABLE {ID}_current_moves $tmp_transferred_unit.moves}
                        {VARIABLE {ID}_current_attacks $tmp_transferred_unit.attacks_left}
                        {CLEAR_VARIABLE tmp_transferred_unit}
                        [modify_unit]
                            [filter]
                                id={ID}
                            [/filter]
                            side=$tmp_transfer_side
                        [/modify_unit]
                        # unfortunately, when you transfer it from side 1 to side 2, he's always shown with full moves
                        # tried modifying moves after changing sides but it doesn't work :(
                    [/then]
                [/if]
                {CLEAR_VARIABLE tmp_transfer_side}
            [/command]
        [/set_menu_item]
    [/event]
    
    [event]
        name=new turn
        first_time_only=no
        id={ID}_transfer_new_turn_reset
        {CLEAR_VARIABLE {ID}_transferred_this_turn}
        {CLEAR_VARIABLE {ID}_current_moves}
        {CLEAR_VARIABLE {ID}_current_attacks}
    [/event]
    
    [event]
        name=turn refresh
        first_time_only=no
        id={ID}_transfer_turn_refresh_after_transfer
        [filter_condition]
            [have_unit]
                id={ID}
                side=$side_number
            [/have_unit]
            [and]
                [variable]
                    name={ID}_transferred_this_turn
                    boolean_equals=yes
                [/variable]
            [/and]
        [/filter_condition]
        [modify_unit]
            [filter]
                id={ID}
            [/filter]
            moves=${ID}_current_moves
            attacks_left={ID}_current_attacks
        [/modify_unit]
        {CLEAR_VARIABLE {ID}_transferred_this_turn}
        {CLEAR_VARIABLE {ID}_current_moves}
        {CLEAR_VARIABLE {ID}_current_attacks}
    [/event]
    [event]
        name=victory
        id={ID}_transfer_clear_menu_on_victory
        first_time_only=no
        [clear_menu_item]
            id={ID}_transfer_control_menu
        [/clear_menu_item]
    [/event]
#enddef

#define ICEPOTION X Y ID
    [item]
        x={X}
        y={Y}
        image="items/potion-blue.png"
    [/item]

    [event]
        name=moveto
        first_time_only=no
        [filter]
            side=1,2
            x={X}
            y={Y}
            [not]
                # We don't want units to get the bonus twice.
                [filter_wml]
                    [attack]
                        range="melee"
                        type="cold"
                    [/attack]
                [/filter_wml]
            [/not]
        [/filter]
        [object]
            id={ID}
            name= _ "Ice Potion"
            image="items/potion-blue.png"
            duration=forever
            description= _ "This potion contains a strange fluid designed to imbue a weapon with the power of cold."
            cannot_use_message= _ "Only a skeletal warrior may acquire this dreaded power!"
            [filter]
                x={X}
                y={Y}
            [/filter]
            [then]
                [remove_item]
                    x={X}
                    y={Y}
                [/remove_item]
            [/then]
            [effect]
                apply_to=attack
                range=melee
                set_type=cold
                increase_damage="50%"
            [/effect]
        [/object]
    [/event]
#enddef

#define TREASURE_CHEST X Y MSG_CODE GOLD_AMOUNT
    #assorted chests of treasure
    [item]
        image="items/chest.png"
        x={X}
        y={Y}
    [/item]
    [event]
        name=moveto
        [filter]
            x={X}
            y={Y}
            side=1,2
        [/filter]
        [message]
            speaker=unit
            message={MSG_CODE}
        [/message]
        [gold]
            side=1,2
            amount={GOLD_AMOUNT}
        [/gold]
        [remove_item]
            x={X}
            y={Y}
        [/remove_item]
    [/event]
#enddef

#define GENERIC_GUARD_UNIT SIDE TYPE X Y
    # Creates a generic unit of TYPE belonging to SIDE at X,Y, which has a
    # random name, gender, traits and the guardian ai special.
    [unit]
        side={SIDE}
        type={TYPE}
        x={X}
        y={Y}
        generate_name=yes
        random_traits=yes
        random_gender=yes
        ai_special=guardian
        upkeep=full
    [/unit]
#enddef

# used to load the map for scenarios
#define TDHR_MAP NAME
    map_file=~add-ons/The_Dark_Hordes_Rewrought/maps/{NAME}
#enddef

# used in S3 when replacing maps with [replace_map_section]
#define TDHR_MAP_DATA NAME
    map_data="{~add-ons/The_Dark_Hordes_Rewrought/maps/{NAME}}"
#enddef

#define LOAD_SUBMAP X_SPAN Y_SPAN OFFSET_X OFFSET_Y MAP
    [store_unit]
        [filter]
            {EVERYWHERE}
        [/filter]
        variable=MOVE_UNIT_store
        kill=yes
    [/store_unit]
    [store_villages]
        variable=villages
    [/store_villages]

    [foreach]
        array=MOVE_UNIT_store
        [do]
            {VARIABLE_OP this_item.x add {OFFSET_X}}
            {VARIABLE_OP this_item.y add {OFFSET_Y}}
            [if]
                [variable]
                    name=this_item.goto_x
                    numerical_not_equals=0
                [/variable]
                [then]
                    {VARIABLE_OP this_item.goto_x add {OFFSET_X}}
                [/then]
            [/if]
            [if]
                [variable]
                    name=this_item.goto_y
                    numerical_not_equals=0
                [/variable]
                [then]
                    {VARIABLE_OP this_item.goto_y add {OFFSET_Y}}
                [/then]
            [/if]
        [/do]
    [/foreach]

    [foreach]
        array=villages
        [do]
            #Make the villages on the old map neutral
            [capture_village]
                x=$this_item.x
                y=$this_item.y
            [/capture_village]
            {VARIABLE_OP this_item.x add {OFFSET_X}}
            {VARIABLE_OP this_item.y add {OFFSET_Y}}
        [/do]
    [/foreach]

    [replace_map_section]
        x={X_SPAN}
        y={Y_SPAN}
        {TDHR_MAP_DATA {MAP}}
    [/replace_map_section]
    [shift_labels]
        x={OFFSET_X}
        y={OFFSET_Y}
    [/shift_labels]

    [foreach]
        array=MOVE_UNIT_store
        [do]
            [unstore_unit]
                variable=this_item
                find_vacant=no
            [/unstore_unit]
        [/do]
    [/foreach]
    {CLEAR_VARIABLE MOVE_UNIT_store}

    [foreach]
        array=villages
        [do]
            [capture_village]
                x=$this_item.x
                y=$this_item.y
                side=$this_item.owner_side
            [/capture_village]
        [/do]
    [/foreach]
    {CLEAR_VARIABLE villages}
#enddef

#define TDHR_MASK_IN_EVENT NAME X Y
    [terrain_mask]
        x={X}
        y={Y}
        mask="{~add-ons/The_Dark_Hordes_Rewrought/masks/{NAME}}"
    [/terrain_mask]
    [redraw]
    [/redraw]
#enddef

#define TDHR_MASK NAME X Y
    [event]
        name=prestart
        {TDHR_MASK_IN_EVENT {NAME} {X} {Y}}
    [/event]
#enddef